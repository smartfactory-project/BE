<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.schedule.mapper.ScheduleMapper">

    <!-- Schedule ResultMap -->
    <resultMap id="ScheduleResultMap" type="com.example.demo.schedule.model.Schedule">
        <id     property="scheduleId"     column="schedule_id"/>
        <result property="userId"         column="user_id"/>
        <result property="title"          column="title"/>
        <result property="description"    column="description"/>
        <result property="type"           column="type"/>
        <result property="startDateTime"  column="start_datetime"/>
        <result property="endDateTime"    column="end_datetime"/>
        <result property="location"       column="location"/>
        <result property="status"         column="status"/>
        <result property="isUrgent"       column="is_urgent"/>
        <result property="isActive"       column="is_active"/>
        <result property="createdAt"      column="created_at"/>
        <result property="updatedAt"      column="updated_at"/>
    </resultMap>

    <!-- Task ResultMap -->
    <resultMap id="TaskResultMap" type="com.example.demo.schedule.model.Task">
        <id     property="taskId"         column="task_id"/>
        <result property="userId"         column="user_id"/>
        <result property="title"          column="title"/>
        <result property="description"    column="description"/>
        <result property="priority"       column="priority"/>
        <result property="status"         column="status"/>
        <result property="dueDate"        column="due_date"/>
        <result property="isActive"       column="is_active"/>
        <result property="createdAt"      column="created_at"/>
        <result property="updatedAt"      column="updated_at"/>
    </resultMap>

    <!-- 스케줄 삽입 -->
    <insert id="insertSchedule" parameterType="com.example.demo.schedule.model.Schedule"
            useGeneratedKeys="true" keyProperty="scheduleId" keyColumn="schedule_id">
        INSERT INTO schedule (user_id, title, description, type, start_datetime, end_datetime, 
                             location, status, is_urgent, is_active)
        VALUES (#{userId}, #{title}, #{description}, #{type}, #{startDateTime}, #{endDateTime},
                #{location}, #{status}, #{isUrgent}, #{isActive})
    </insert>

    <!-- 사용자별 일정 조회 (기간별) -->
    <select id="selectSchedulesByUserId" resultMap="ScheduleResultMap">
        SELECT s.*
        FROM schedule s
        WHERE s.user_id = #{userId}
        AND s.is_active = TRUE
        <if test="startDate != null">
            AND DATE(s.start_datetime) >= DATE(#{startDate})
        </if>
        <if test="endDate != null">
            AND DATE(s.start_datetime) &lt;= DATE(#{endDate})
        </if>
        ORDER BY s.start_datetime ASC
    </select>

    <!-- 일정 ID로 조회 -->
    <select id="selectScheduleById" parameterType="int" resultMap="ScheduleResultMap">
        SELECT s.*
        FROM schedule s
        WHERE s.schedule_id = #{scheduleId}
        AND s.is_active = TRUE
    </select>

    <!-- 사용자별 타입별 일정 조회 -->
    <select id="selectSchedulesByUserIdAndType" resultMap="ScheduleResultMap">
        SELECT s.*
        FROM schedule s
        WHERE s.user_id = #{userId}
        AND s.is_active = TRUE
        <if test="type != null and type != 'all'">
            AND s.type = #{type}
        </if>
        <if test="startDate != null">
            AND DATE(s.start_datetime) >= DATE(#{startDate})
        </if>
        <if test="endDate != null">
            AND DATE(s.start_datetime) &lt;= DATE(#{endDate})
        </if>
        ORDER BY s.start_datetime ASC
    </select>

    <!-- 오늘의 일정 -->
    <select id="selectTodaySchedules" resultMap="ScheduleResultMap">
        SELECT s.*
        FROM schedule s
        WHERE s.user_id = #{userId}
        AND s.is_active = TRUE
        AND DATE(s.start_datetime) = CURDATE()
        ORDER BY s.start_datetime ASC
    </select>

    <!-- 다가오는 일정 (n일 이내) -->
    <select id="selectUpcomingSchedules" resultMap="ScheduleResultMap">
        SELECT s.*
        FROM schedule s
        WHERE s.user_id = #{userId}
        AND s.is_active = TRUE
        AND DATE(s.start_datetime) > CURDATE()
        AND DATE(s.start_datetime) &lt;= DATE_ADD(CURDATE(), INTERVAL #{days} DAY)
        ORDER BY s.start_datetime ASC
    </select>

    <!-- 일정 업데이트 -->
    <update id="updateSchedule" parameterType="com.example.demo.schedule.model.Schedule">
        UPDATE schedule SET
            title = #{title},
            description = #{description},
            type = #{type},
            start_datetime = #{startDateTime},
            end_datetime = #{endDateTime},
            location = #{location},
            status = #{status},
            is_urgent = #{isUrgent},
            updated_at = NOW()
        WHERE schedule_id = #{scheduleId}
    </update>

    <!-- 일정 상태 업데이트 -->
    <update id="updateScheduleStatus">
        UPDATE schedule SET
            status = #{status},
            updated_at = NOW()
        WHERE schedule_id = #{scheduleId}
    </update>

    <!-- 일정 삭제 (hard delete) -->
    <delete id="deleteSchedule">
        DELETE FROM schedule 
        WHERE schedule_id = #{scheduleId}
    </delete>

    <!-- 할일 삽입 -->
    <insert id="insertTask" parameterType="com.example.demo.schedule.model.Task"
            useGeneratedKeys="true" keyProperty="taskId" keyColumn="task_id">
        INSERT INTO task (user_id, title, description, priority, status, due_date, is_active)
        VALUES (#{userId}, #{title}, #{description}, #{priority}, #{status}, #{dueDate}, #{isActive})
    </insert>

    <!-- 사용자별 할일 조회 -->
    <select id="selectTasksByUserId" resultMap="TaskResultMap">
        SELECT t.*
        FROM task t
        WHERE t.user_id = #{userId}
        AND t.is_active = TRUE
        ORDER BY t.created_at DESC
    </select>

    <!-- 할일 ID로 조회 -->
    <select id="selectTaskById" parameterType="int" resultMap="TaskResultMap">
        SELECT t.*
        FROM task t
        WHERE t.task_id = #{taskId}
        AND t.is_active = TRUE
    </select>

    <!-- 할일 업데이트 -->
    <update id="updateTask" parameterType="com.example.demo.schedule.model.Task">
        UPDATE task SET
            title = #{title},
            description = #{description},
            priority = #{priority},
            status = #{status},
            due_date = #{dueDate},
            updated_at = NOW()
        WHERE task_id = #{taskId}
    </update>

    <!-- 할일 상태 업데이트 -->
    <update id="updateTaskStatus">
        UPDATE task SET
            status = #{status},
            updated_at = NOW()
        WHERE task_id = #{taskId}
    </update>

    <!-- 할일 삭제 (hard delete) -->
    <delete id="deleteTask">
        DELETE FROM task WHERE task_id = #{taskId}
    </delete>

    <!-- 오늘 해야 할 일들 -->
    <select id="selectTodayTasks" resultMap="TaskResultMap">
        SELECT t.*
        FROM task t
        WHERE t.user_id = #{userId}
        AND t.is_active = TRUE
        AND (DATE(t.due_date) = CURDATE() OR t.due_date IS NULL OR DATE(t.created_at) = CURDATE())
        ORDER BY 
            CASE t.status 
                WHEN 'completed' THEN 1
                WHEN 'in_progress' THEN 2  
                WHEN 'pending' THEN 3
                ELSE 4
            END,
            t.priority DESC, 
            t.created_at ASC
    </select>

    <!-- 완료되지 않은 할일들 -->
    <select id="selectPendingTasks" resultMap="TaskResultMap">
        SELECT t.*
        FROM task t
        WHERE t.user_id = #{userId}
        AND t.is_active = TRUE
        AND t.status IN ('pending', 'in_progress')
        ORDER BY t.due_date ASC, t.priority DESC
    </select>

    <!-- 스케줄 상태별 카운트 -->
    <select id="countSchedulesByStatus" resultType="int">
        SELECT COUNT(*)
        FROM schedule
        WHERE user_id = #{userId}
        AND is_active = TRUE
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>

    <!-- 할일 상태별 카운트 -->
    <select id="countTasksByStatus" resultType="int">
        SELECT COUNT(*)
        FROM task
        WHERE user_id = #{userId}
        AND is_active = TRUE
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>

</mapper>